{"version":3,"sources":["components/card.component/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box.component/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","monster","id","width","height","name","Cardlist","monsters","map","SearchBox","placeholder","handleChange","class","type","onChange","App","state","searchField","fetch","then","response","json","users","setState","this","filteredMonsters","filter","toLowerCase","includes","e","target","value","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mUAKaA,EAAO,SAAAC,GAAK,OAIrB,sBAAKC,UAAU,iBAAf,UAEA,qBAAKC,IAAI,UAAUC,IAAG,6DAAwDH,EAAMI,QAAQC,GAAtE,iBAAyFC,MAAM,QAAQC,OAAO,UAOpI,oCAAOP,EAAMI,QAAQI,KAArB,WCbSC,EAAW,SAAAT,GAAK,OACzB,qBAAKC,UAAU,YAAf,SACED,EAAMU,SAASC,KAAI,SAAAP,GAAO,OAC3B,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQC,UCLXO,G,MAAW,SAAC,GAAD,IAAEC,EAAF,EAAEA,YAAYC,EAAd,EAAcA,aAAd,OAIxB,uBAAOC,MAAO,aACdC,KAAK,SACLH,YAAaA,EACbI,SAAUH,MC6CKI,G,wDA7Cb,aACC,IAAD,8BACE,gBACKC,MACL,CACET,SAAS,GACTU,YAAY,IALhB,E,qDASC,WACC,IAAD,OACEC,MAAM,+CACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAG,EAAKC,SAAS,CAAChB,SAASe,S,oBAGzC,WACC,IAAD,SAEiCE,KAAKR,MAA7BT,EAFT,EAESA,SAAUU,EAFnB,EAEmBA,YACXQ,EAAmBlB,EAASmB,QACjC,SAAAzB,GAAO,OACNA,EAAQI,KAAKsB,cAAcC,SAASX,EAAYU,kBAGlD,OACE,qBAAK7B,UAAU,MAAf,SACE,yBAAQA,UAAU,aAAlB,UACA,oBAAIc,MAAM,YAAV,8BAEA,cAAC,EAAD,CACCF,YAAY,mBACZC,aAAc,SAAAkB,GAAI,EAAKN,SAAS,CAACN,YAAYY,EAAEC,OAAOC,WAGtD,cAAC,EAAD,CAAUxB,SAAUkB,a,GAtCXO,cCIHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBhB,MAAK,YAAkD,IAA/CiB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.31b4baff.chunk.js","sourcesContent":["import React from \"react\";\r\nimport '../card.component/card.styles.css';\r\n\r\n\r\n\r\nexport const Card = props =>(\r\n    \r\n    \r\n     \r\n    <div className=\"card-container\">\r\n      \r\n    <img alt=\"monster\" src={`https://github.com/mitrya/monster-images/blob/main/${props.monster.id}.jpg?raw=true`} width=\"170px\" height=\"170px\"/>\r\n\r\n     {/* \r\n        <img alt = \"robots\"\r\n        src = { `https://robohash.org/set=set2/${props.monster.id}?50x50` }\r\n        width=\"200px\" height=\"200px\" />\r\n     */}\r\n    <div> {props.monster.name} </div>\r\n     </div>\r\n     \r\n\r\n);","import React from \"react\";\r\nimport './card-list.styles.css';\r\nimport '../card.component/card.component.jsx';\r\nimport { Card } from \"../card.component/card.component.jsx\";\r\n\r\nexport const Cardlist = props =>(\r\n    <div className=\"card-list\"> \r\n     {props.monsters.map(monster =>(\r\n     <Card key={monster.id} monster={monster}/>\r\n     ))}\r\n    </div>\r\n);","import React from \"react\";\r\nimport './search-box.styles.css'\r\n\r\nexport const SearchBox =({placeholder,handleChange})=>\r\n(\r\n\r\n\r\n<input class =\"search-box\"\r\ntype='search' \r\nplaceholder={placeholder}\r\nonChange={handleChange}         \r\n/>\r\n\r\n \r\n);\r\n","// import logo from './logo.svg';\nimport React , {Component} from 'react';\nimport { Cardlist } from './components/card-list/card-list.component';\nimport { SearchBox } from './components/search-box.component/search-box.component';\nimport './App.css';\n\n\n\nclass App extends Component{\n\n  constructor()\n  {\n    super();\n    this.state=\n    {\n      monsters:[],\n      searchField:''\n    };\n  }\n\n   componentDidMount()\n   {\n     fetch('https://jsonplaceholder.typicode.com/users/')\n     .then(response => response.json())\n     .then(users =>this.setState({monsters:users}));\n   }\n\n  render()\n  {\n  \n    const {monsters, searchField }=this.state;\n    const filteredMonsters = monsters.filter\n    (monster=>\n      monster.name.toLowerCase().includes(searchField.toLowerCase())\n    )\n   \n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n        <h1 class=\"main-head\">Monsters Rolodex</h1>\n        \n        <SearchBox \n         placeholder=\"Monster search..\"\n         handleChange={e=>{this.setState({searchField:e.target.value})}}\n        />\n\n         <Cardlist monsters={filteredMonsters}/>\n     \n        </header>\n      </div>\n    );\n  }\n}\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}